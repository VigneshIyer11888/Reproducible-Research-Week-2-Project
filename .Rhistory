head(pm0)
cnames
cnames <- strsplit(cnames, split = "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
strx0
str(x0)
sum(mean(is.na(x0)))
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & County.Site %in% both)
cnt0 <- subset(pm0, State.Code == 36)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(x0sub, lwd =  2, na.rm = TRUE)
abline(x0sub, na.rm = TRUE, lwd = 2)
abline(x0sub, lwd = 2)
abline(x0sub)
abline()
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(names(mn0), mean)
d0 <- data.frame(names(mn0), mean =  mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0,d1, by = "state")
dim(mrg)
head(mrg)
points(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, plot(rep(1, 52), mrg[, 2] mrg[,3]))
with(mrg, plot(rep(1, 52), mrg[, 3]))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments()
segments(x1,y1)
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
load("~/.RData")
NEI <- readRDS("./Data for Peer Assessment/summarySCC_PM25.rds")
SCC <- readRDS("./Data for Peer Assessment/Source_Classification_Code.rds")
# We first need to find the aggregate total PM2.5 emission from all sources for
# each of the years 1999, 2002, 2005, and 2008.
aggTotalEmissions <- aggregate(Emissions ~ year,NEI, sum)
# Have total emissions from PM2.5 decreased in the United States
# from 1999 to 2008? Using the base plotting system, make a plot
# showing the total PM2.5 emission from all sources for each of
# the years 1999, 2002, 2005, and 2008.
png("plot1.png", width=480,height=480,units="px",bg="transparent")
barplot(height=aggTotalEmissions$Emissions,
names.arg=aggTotalEmissions$year,
xlab="years",
ylab=expression('total PM'[2.5]*' emission'),
main=expression('Total PM'[2.5]*' emissions at various years')
)
dev.off()
NEI <- readRDS("../Data for Peer Assessment/summarySCC_PM25.rds")
SCC <- readRDS("../Data for Peer Assessment/Source_Classification_Code.rds")
# We first need to find the aggregate total PM2.5 emission from all sources for
# each of the years 1999, 2002, 2005, and 2008.
aggTotalEmissions <- aggregate(Emissions ~ year,NEI, sum)
# Have total emissions from PM2.5 decreased in the United States
# from 1999 to 2008? Using the base plotting system, make a plot
# showing the total PM2.5 emission from all sources for each of
# the years 1999, 2002, 2005, and 2008.
png("plot1.png", width=480,height=480,units="px",bg="transparent")
barplot(height=aggTotalEmissions$Emissions,
names.arg=aggTotalEmissions$year,
xlab="years",
ylab=expression('total PM'[2.5]*' emission'),
main=expression('Total PM'[2.5]*' emissions at various years')
)
dev.off()
NEI <- readRDS("../Data for Peer Assessment/summarySCC_PM25.rds")
SCC <- readRDS("../Data for Peer Assessment/Source_Classification_Code.rds")
SCC <- readRDS("./Data for Peer Assessment/Source_Classification_Code.rds")
NEI <- readRDS("../Data for Peer Assessment/summarySCC_PM25.rds")
NEI <- readRDS("../Data for Peer Assessment/summarySCC_PM25.rds")
SCC <- readRDS("../Data for Peer Assessment/Source_Classification_Code.rds")
install.packages("latexpdf")
install.packages("rmarkdown")
getwd()
setwd("C:/Users/DELL/OneDrive/Desktop/Coursera Folder/Reproducibile Research Week 2 Project")
# This section deals with the downloading the compressed file and
# extracting it contents.
dataFile <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(dataFile, destfile = "./activity.zip")
unzip(zipfile = "./activity.zip",
exdir = "./activity")
# This section deals with the downloading the compressed file and
# extracting it contents.
dataFile <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(dataFile, destfile = "./activity.zip")
unzip(zipfile = "./activity.zip",
exdir = "./activity")
# This section deals with the downloading the compressed file and
# extracting it contents.
dataFile <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(dataFile, destfile = "../activity.zip")
unzip(zipfile = "../activity.zip",
exdir = "../activity")
# Reading the contents of the file
readActivityData <- read.csv("../activity/activity.csv")
head(readActivityData)
setwd("C:/Users/DELL/OneDrive/Desktop/Coursera Folder")
setwd("C:/Users/DELL/OneDrive/Desktop/Coursera Folder/Reproducible-Research-Week-2-Project")
# Reading the contents of the file
readActivityData <- read.csv("../activity/activity.csv")
summary(readActivityData)
head(readActivityData)
# Reading the contents of the file
readActivityData <- read.csv("../activity/activity.csv")
head(readActivityData)
# Reading the contents of the file
readActivityData <- read.csv("../activity/activity.csv")
summary(readActivityData)
head(readActivityData)
activityCompleteData <- na.omit(readActivityData)
activityCompleteData <- na.omit(readActivityData)
activityCompleteData <- na.omit(readActivityData)
head(activityCompleteData)
library(ggplot2)
library(ggplot2)
totalSteps <- ggplot(data = activityCompleteData, aes(Total)) + geom_histogram(binwidth = 1000, colour = "#FF8569") + xlab("Total steps taken each day") + ylab("Count") + ggtitle("Histogram of the total number of steps taken per day")
print(totalSteps)
library(ggplot2)
totalSteps <- ggplot(data = activityCompleteData, aes(steps)) + geom_histogram(binwidth = 1000, colour = "#FF8569") + xlab("Total steps taken each day") + ylab("Count") + ggtitle("Histogram of the total number of steps taken per day")
print(totalSteps)
library(ggplot2)
totalSteps <- ggplot(data = activityCompleteData, aes(activityCompleteData$steps)) + geom_histogram(binwidth = 1000, colour = "#FF8569") + xlab("Total steps taken each day") + ylab("Count") + ggtitle("Histogram of the total number of steps taken per day")
print(totalSteps)
library(ggplot2)
totalSteps <- ggplot(data = activityCompleteData, aes(activityCompleteData$interval)) + geom_histogram(binwidth = 1000, colour = "#FF8569") + xlab("Total steps taken each day") + ylab("Count") + ggtitle("Histogram of the total number of steps taken per day")
print(totalSteps)
library(ggplot2)
names(activityCompleteData$steps)[names(activityCompleteData$steps) == "x"] <- "Total"
totalSteps <- ggplot(data = activityCompleteData, aes(Total)) + geom_histogram(binwidth = 1000, colour = "#FF8569") + xlab("Total steps taken each day") + ylab("Count") + ggtitle("Histogram of the total number of steps taken per day")
print(totalSteps)
library(dplyr)
totalSteps <- activityCompleteData %>% select(date, steps) %>% group_by(date) %>% summarize(tsteps= sum(steps))
hist(totalSteps$tsteps, xlab = "Total daily Steps",main="Histogram of Total Steps by day", breaks = 20)
library(dplyr)
totalSteps <- activityCompleteData %>% select(date, steps) %>% group_by(date) %>% summarize(tsteps= sum(steps))
hist(totalSteps$tsteps, xlab = "Total daily Steps", ylab = "Count of the number of steps", main="Histogram of Total Steps by day", breaks = 20)
library(dplyr)
totalSteps <- activityCompleteData %>% select(date, steps) %>% group_by(date) %>% summarize(tsteps= sum(steps))
hist(totalSteps$tsteps, xlab = "Total steps taken daily", ylab = "Count of the number of steps", main="Histogram of Total no of Steps by day", breaks = 20)
library(dplyr)
totalSteps <- activityCompleteData %>% select(date, steps) %>% group_by(date) %>% summarize(tsteps= sum(steps))
hist(totalSteps$tsteps, xlab = "Total steps taken daily", ylab = "Count of the number of steps", main="Histogram of Total no of Steps by day", breaks = 20, col = "#FF8509" )
mean(totalSteps$tsteps)
mean(totalSteps$tsteps)
median(totalSteps$tsteps)
median(totalSteps$tsteps)
mean(totalSteps$tsteps)
library(ggplot2)
five_min_interval <- totalSteps%>% select(interval, steps) %>% na.omit() %>% group_by(interval) %>% summarize(tsteps= mean(steps))
library(ggplot2)
head(totalSteps)
library(ggplot2)
head(activityCompleteData)
library(ggplot2)
head(activityCompleteData)
five_min_interval <- activityCompleteData %>% select(interval, steps) %>% na.omit() %>% group_by(interval) %>% summarize(tsteps= mean(steps))
ggplot(five_min_interval, aes(x=interval, y=tsteps))+ geom_line()
library(ggplot2)
head(activityCompleteData)
five_min_interval <- activityCompleteData %>% select(interval, steps) %>% na.omit() %>% group_by(interval) %>% summarize(tsteps= mean(steps))
ggplot(five_min_interval, aes(x=interval, y=tsteps))+ geom_line()
head(five_min_interval)
head(five_min_interval)
five_min_interval[which(five_min_interval$steps == max(five_min_interval$steps)),]
five_min_interval[which(five_min_interval$tsteps== max(five_min_interval$tsteps)),]
sapply(X = readActivityData, FUN = function(x) sum(is.na(x)))
replacewithmean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
meandata <- readActivityData%>% group_by(interval) %>% mutate(steps= replacewithmean(steps))
head(meandata)
replacewithmean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
meanActivitydata <- readActivityData%>% group_by(interval) %>% mutate(steps= replacewithmean(steps))
head(meanACtivitydata)
replacewithmean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
meanActivitydata <- readActivityData%>% group_by(interval) %>% mutate(steps= replacewithmean(steps))
head(meanActivitydata)
sum(is.na(meanActivitydata))
newActivitydataset <- as.data.frame(meanActivitydata)
head(newActivitydataset)
summary(newActivitydataset)
hist(newActivitydataset$tsteps, xlab = "Total steps taken daily", ylab = "Count of the number of steps", main="Histogram of Total no of Steps by day", breaks = 20, col = "#FF8509" )
hist(newActivitydataset$totalsteps, xlab = "Steps", ylab = "Frequency", main = "Total Daily Steps", breaks = 20)
library(ggplot2)
new_steps <- aggregate(newActivitydataset$steps, by = list(newActivitydataset$date), FUN = sum)
names(new_steps)[names(new_steps) == "x"] <- "Total"
names(new_steps)[names(new_steps) == "Group.1"] <- "Date"
hist2 <- ggplot(data = new_steps, aes(Total)) +
geom_histogram(binwidth = 1500, colour = "white") +
xlab("Total Number of Steps Taken Each Day") +
ylab("Count") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day with New Version Dataset")
print(hist2)
library(ggplot2)
new_steps <- aggregate(newActivitydataset$steps, by = list(newActivitydataset$date), FUN = sum)
names(new_steps)[names(new_steps) == "x"] <- "Total"
names(new_steps)[names(new_steps) == "Group.1"] <- "Date"
hist2 <- ggplot(data = new_steps, aes(Total)) +
geom_histogram(binwidth = 1500, colour = "#FF7864") +
xlab("Total Number of Steps Taken Each Day") +
ylab("Count") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day with New Version Dataset")
print(hist2)
library(ggplot2)
new_steps <- aggregate(newActivitydataset$steps, by = list(newActivitydataset$date), FUN = sum)
names(new_steps)[names(new_steps) == "x"] <- "Total"
names(new_steps)[names(new_steps) == "Group.1"] <- "Date"
hist2 <- ggplot(data = new_steps, aes(Total)) +
geom_histogram(binwidth = 1500, colour = "#FF7864") +
xlab("Total Number of Steps Taken Each Day") +
ylab("Count") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day with New Dataset")
print(hist2)
library(ggplot2)
newActivitysteps <- aggregate(newActivitydataset$steps, by = list(newActivitydataset$date), FUN = sum)
names(newActivitysteps)[names(newActivitysteps) == "x"] <- "Total"
names(newActivitysteps)[names(newActivitysteps) == "Group.1"] <- "Date"
hist2 <- ggplot(data = newActivitysteps, aes(Total)) +
geom_histogram(binwidth = 1500, colour = "#FF7864") +
xlab("Total Number of Steps Taken Each Day") +
ylab("Count") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day with New Dataset")
print(hist2)
library(dplyr)
totalSteps <- activityCompleteData %>% select(date, steps) %>% group_by(date) %>% summarize(tsteps= sum(steps))
hist1 <- hist(totalSteps$tsteps, xlab = "Total steps taken daily", ylab = "Count of the number of steps", main="Histogram of Total no of Steps by day", breaks = 20, col = "#FF8509" )
print(hist1)
library(dplyr)
totalSteps <- activityCompleteData %>% select(date, steps) %>% group_by(date) %>% summarize(tsteps= sum(steps))
hist1 <- hist(totalSteps$tsteps, xlab = "Total steps taken daily", ylab = "Count of the number of steps", main="Histogram of Total no of Steps by day", breaks = 20, col = "#FF8509" )
hist1
library(dplyr)
totalSteps <- activityCompleteData %>% select(date, steps) %>% group_by(date) %>% summarize(tsteps= sum(steps))
hist1 <- hist(totalSteps$tsteps, xlab = "Total steps taken daily", ylab = "Count of the number of steps", main="Histogram of Total no of Steps by day", breaks = 20, col = "#FF8509" )
library(grid)
library(gridExtra)
library(grid)
grid.arrange(hist1, hist2, ncol = 2)
library(grid)
# This section deals with the downloading the compressed file and
# extracting it contents.
dataFile <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(dataFile, destfile = "./activity.zip")
unzip(zipfile = "./activity.zip", exdir = "./activity")
# Reading the contents of the file
readActivityData <- read.csv("../activity/activity.csv")
summary(readActivityData)
head(readActivityData)
activityCompleteData <- na.omit(readActivityData)
head(activityCompleteData)
library(dplyr)
totalSteps <- activityCompleteData %>% select(date, steps) %>% group_by(date) %>% summarize(tsteps= sum(steps))
hist1 <- hist(totalSteps$tsteps, xlab = "Total steps taken daily", ylab = "Count of the number of steps", main="Histogram of Total no of Steps by day", breaks = 20, col = "#FF8509" )
mean(totalSteps$tsteps)
median(totalSteps$tsteps)
library(ggplot2)
head(activityCompleteData)
five_min_interval <- activityCompleteData %>% select(interval, steps) %>% na.omit() %>% group_by(interval) %>% summarize(tsteps= mean(steps))
ggplot(five_min_interval, aes(x=interval, y=tsteps))+ geom_line()
head(five_min_interval)
five_min_interval[which(five_min_interval$tsteps== max(five_min_interval$tsteps)),]
sapply(X = readActivityData, FUN = function(x) sum(is.na(x)))
replacewithmean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
meanActivitydata <- readActivityData%>% group_by(interval) %>% mutate(steps= replacewithmean(steps))
head(meanActivitydata)
sum(is.na(meanActivitydata))
newActivitydataset <- as.data.frame(meanActivitydata)
head(newActivitydataset)
summary(newActivitydataset)
library(ggplot2)
newActivitysteps <- aggregate(newActivitydataset$steps, by = list(newActivitydataset$date), FUN = sum)
names(newActivitysteps)[names(newActivitysteps) == "x"] <- "Total"
names(newActivitysteps)[names(newActivitysteps) == "Group.1"] <- "Date"
hist2 <- ggplot(data = newActivitysteps, aes(Total)) +
geom_histogram(binwidth = 1500, colour = "#FF7864") +
xlab("Total Number of Steps Taken Each Day") +
ylab("Count") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day with New Dataset")
print(hist2)
install.packages("gridExtra")
library(ggplot2)
newActivitysteps <- aggregate(newActivitydataset$steps, by = list(newActivitydataset$date), FUN = sum)
names(newActivitysteps)[names(newActivitysteps) == "x"] <- "Total"
names(newActivitysteps)[names(newActivitysteps) == "Group.1"] <- "Date"
hist2 <- ggplot(data = newActivitysteps, aes(Total)) +
geom_histogram(binwidth = 1500, colour = "#FF7864", fill = "#FF8509") +
xlab("Total Number of Steps Taken Each Day") +
ylab("Count") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day with New Dataset")
print(hist2)
library(ggplot2)
newActivitysteps <- aggregate(newActivitydataset$steps, by = list(newActivitydataset$date), FUN = sum)
names(newActivitysteps)[names(newActivitysteps) == "x"] <- "Total"
names(newActivitysteps)[names(newActivitysteps) == "Group.1"] <- "Date"
hist2 <- ggplot(data = newActivitysteps, aes(Total)) +
geom_histogram(binwidth = 1500, colour = "#000000", fill = "#FF8509") +
xlab("Total Number of Steps Taken Each Day") +
ylab("Count") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day with New Dataset")
print(hist2)
replaceWithActivitymean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
meanActivitydata <- readActivityData%>% group_by(interval) %>% mutate(steps= replaceWithActivitymean(steps))
head(meanActivitydata)
mean(newActivitydataset)
mean(newActivitysteps)
mean(meanActivitydata)
newActivitydataset
mean(newActivitydataset$steps)
mean(meanActivitydata$steps)
oldActivitymean <- mean(totalSteps$tsteps, na.rm = TRUE)
oldActivitymean
oldActivitymean <- mean(totalSteps$tsteps, na.rm = TRUE)
head(totalSteps)
head(newActivitydataset)
head(newActivitysteps)
mean(newActivitysteps$Total)
oldActivitymedian <- median(totalSteps$tsteps, na.rm = TRUE)
newActivitymedian <- median(newActivitysteps$Total)
oldActivitymean
oldActivitymedian
newActivitymedian
oldActivitymean <- mean(totalSteps$tsteps, na.rm = TRUE)
newActivitymean <- mean(newActivitysteps$Total)
oldActivitymedian <- median(totalSteps$tsteps, na.rm = TRUE)
newActivitymedian <- median(newActivitysteps$Total)
oldActivitymean <- mean(totalSteps$tsteps, na.rm = TRUE)
oldActivitymean
newActivitymean <- mean(newActivitysteps$Total)
newActivitymean
oldActivitymedian <- median(totalSteps$tsteps, na.rm = TRUE)
oldActivitymedian
newActivitymedian <- median(newActivitysteps$Total)
newActivitymedian
oldActivitymean <- mean(totalSteps$tsteps, na.rm = TRUE)
oldActivitymean
newActivitymean <- mean(newActivitysteps$Total)
newActivitymean
oldActivitymedian <- median(totalSteps$tsteps, na.rm = TRUE)
oldActivitymedian
newActivitymedian <- median(newActivitysteps$Total)
newActivitymedian
meanActivitydata$date <- as.Date(meanActivitydata$date)
meanActivitydata$weekday <- weekdays(meanActivitydata$date)
meanActivitydata$weekend <- ifelse(meanActivitydata$weekday=="Saturday" | meanActivitydata$weekday=="Sunday", "Weekend", "Weekday" )
meanActivitydata$date <- as.Date(meanActivitydata$date)
meanActivitydata$weekday <- weekdays(meanActivitydata$date)
meanActivitydata$weekend <- ifelse(meanActivitydata$weekday=="Saturday" | meanActivitydata$weekday=="Sunday", "Weekend", "Weekday" )
library(ggplot2)
meandataweekendweekday <- aggregate(meanActivitydata$steps , by= list(meanActivitydata$weekend, meanActivitydata$interval), na.omit(mean))
names(meandataweekendweekday) <- c("weekend", "interval", "steps")
ggplot(meandataweekendweekday, aes(x=interval, y=steps, color=weekend)) + geom_line()+
facet_grid(weekend ~.) + xlab("Interval") + ylab("Mean of Steps") +
ggtitle("Comparison of Average Number of Steps in Each Interval")
# This section deals with the downloading the compressed file and
# extracting it contents.
dataFile <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(dataFile, destfile = "./activity.zip")
unzip(zipfile = "./activity.zip", exdir = "./activity")
# Reading the contents of the file
readActivityData <- read.csv("../activity/activity.csv")
summary(readActivityData)
head(readActivityData)
activityCompleteData <- na.omit(readActivityData)
head(activityCompleteData)
library(dplyr)
totalSteps <- activityCompleteData %>% select(date, steps) %>% group_by(date) %>% summarize(tsteps= sum(steps))
hist1 <- hist(totalSteps$tsteps, xlab = "Total steps taken daily", ylab = "Count of the number of steps", main="Histogram of Total no of Steps by day", breaks = 20, col = "#FF8509" )
mean(totalSteps$tsteps)
median(totalSteps$tsteps)
library(ggplot2)
head(activityCompleteData)
five_min_interval <- activityCompleteData %>% select(interval, steps) %>% na.omit() %>% group_by(interval) %>% summarize(tsteps= mean(steps))
ggplot(five_min_interval, aes(x=interval, y=tsteps))+ geom_line()
head(five_min_interval)
five_min_interval[which(five_min_interval$tsteps== max(five_min_interval$tsteps)),]
sapply(X = readActivityData, FUN = function(x) sum(is.na(x)))
replaceWithActivitymean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
meanActivitydata <- readActivityData%>% group_by(interval) %>% mutate(steps= replaceWithActivitymean(steps))
head(meanActivitydata)
sum(is.na(meanActivitydata))
newActivitydataset <- as.data.frame(meanActivitydata)
head(newActivitydataset)
summary(newActivitydataset)
library(ggplot2)
newActivitysteps <- aggregate(newActivitydataset$steps, by = list(newActivitydataset$date), FUN = sum)
names(newActivitysteps)[names(newActivitysteps) == "x"] <- "Total"
names(newActivitysteps)[names(newActivitysteps) == "Group.1"] <- "Date"
hist2 <- ggplot(data = newActivitysteps, aes(Total)) +
geom_histogram(binwidth = 1500, colour = "#000000", fill = "#FF8509") +
xlab("Total Number of Steps Taken Each Day") +
ylab("Count") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day with New Dataset")
print(hist2)
oldActivitymean <- mean(totalSteps$tsteps, na.rm = TRUE)
oldActivitymean
newActivitymean <- mean(newActivitysteps$Total)
newActivitymean
oldActivitymedian <- median(totalSteps$tsteps, na.rm = TRUE)
oldActivitymedian
newActivitymedian <- median(newActivitysteps$Total)
newActivitymedian
meanActivitydata$date <- as.Date(meanActivitydata$date)
meanActivitydata$weekday <- weekdays(meanActivitydata$date)
meanActivitydata$weekend <- ifelse(meanActivitydata$weekday=="Saturday" | meanActivitydata$weekday=="Sunday", "Weekend", "Weekday" )
library(ggplot2)
meandataweekendweekday <- aggregate(meanActivitydata$steps , by= list(meanActivitydata$weekend, meanActivitydata$interval), na.omit(mean))
names(meandataweekendweekday) <- c("weekend", "interval", "steps")
ggplot(meandataweekendweekday, aes(x=interval, y=steps, color=weekend)) + geom_line()+
facet_grid(weekend ~.) + xlab("Interval") + ylab("Mean of Steps") +
ggtitle("Comparison of Average Number of Steps in Each Interval")
# This section deals with the downloading the compressed file and
# extracting it contents.
dataFile <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(dataFile, destfile = "./activity.zip")
unzip(zipfile = "./activity.zip", exdir = "./activity")
# Reading the contents of the file
readActivityData <- read.csv("../activity/activity.csv")
summary(readActivityData)
head(readActivityData)
activityCompleteData <- na.omit(readActivityData)
head(activityCompleteData)
library(dplyr)
totalSteps <- activityCompleteData %>% select(date, steps) %>% group_by(date) %>% summarize(tsteps= sum(steps))
hist1 <- hist(totalSteps$tsteps, xlab = "Total steps taken daily", ylab = "Count of the number of steps", main="Histogram of Total no of Steps by day", breaks = 20, col = "#FF8509" )
mean(totalSteps$tsteps)
median(totalSteps$tsteps)
library(ggplot2)
head(activityCompleteData)
five_min_interval <- activityCompleteData %>% select(interval, steps) %>% na.omit() %>% group_by(interval) %>% summarize(tsteps= mean(steps))
ggplot(five_min_interval, aes(x=interval, y=tsteps))+ geom_line()
head(five_min_interval)
five_min_interval[which(five_min_interval$tsteps== max(five_min_interval$tsteps)),]
sapply(X = readActivityData, FUN = function(x) sum(is.na(x)))
replaceWithActivitymean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
meanActivitydata <- readActivityData%>% group_by(interval) %>% mutate(steps= replaceWithActivitymean(steps))
head(meanActivitydata)
sum(is.na(meanActivitydata))
newActivitydataset <- as.data.frame(meanActivitydata)
head(newActivitydataset)
summary(newActivitydataset)
library(ggplot2)
newActivitysteps <- aggregate(newActivitydataset$steps, by = list(newActivitydataset$date), FUN = sum)
names(newActivitysteps)[names(newActivitysteps) == "x"] <- "Total"
names(newActivitysteps)[names(newActivitysteps) == "Group.1"] <- "Date"
hist2 <- ggplot(data = newActivitysteps, aes(Total)) +
geom_histogram(binwidth = 1500, colour = "#000000", fill = "#FF8509") +
xlab("Total Number of Steps Taken Each Day") +
ylab("Count") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day with New Dataset")
print(hist2)
oldActivitymean <- mean(totalSteps$tsteps, na.rm = TRUE)
oldActivitymean
newActivitymean <- mean(newActivitysteps$Total)
newActivitymean
oldActivitymedian <- median(totalSteps$tsteps, na.rm = TRUE)
oldActivitymedian
newActivitymedian <- median(newActivitysteps$Total)
newActivitymedian
meanActivitydata$date <- as.Date(meanActivitydata$date)
meanActivitydata$weekday <- weekdays(meanActivitydata$date)
meanActivitydata$weekend <- ifelse(meanActivitydata$weekday=="Saturday" | meanActivitydata$weekday=="Sunday", "Weekend", "Weekday" )
library(ggplot2)
meandataweekendweekday <- aggregate(meanActivitydata$steps , by= list(meanActivitydata$weekend, meanActivitydata$interval), na.omit(mean))
names(meandataweekendweekday) <- c("weekend", "interval", "steps")
ggplot(meandataweekendweekday, aes(x=interval, y=steps, color=weekend)) + geom_line()+
facet_grid(weekend ~.) + xlab("Interval") + ylab("Mean of Steps") +
ggtitle("Comparison of Average Number of Steps in Each Interval")
